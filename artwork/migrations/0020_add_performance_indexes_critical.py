# Generated by performance optimization analysis
from django.db import migrations

class Migration(migrations.Migration):

    dependencies = [
        ('artwork', '0019_add_cache_metrics'),
    ]

    operations = [
        # Critical indexes for homepage and gallery performance
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_artwork_featured_active ON artwork_artwork(is_featured, is_active);",
            "DROP INDEX IF EXISTS idx_artwork_featured_active;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_artwork_type_active ON artwork_artwork(type, is_active);",
            "DROP INDEX IF EXISTS idx_artwork_type_active;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_artwork_medium_active ON artwork_artwork(medium, is_active);",
            "DROP INDEX IF EXISTS idx_artwork_medium_active;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_artwork_created_featured ON artwork_artwork(created_at, is_featured);",
            "DROP INDEX IF EXISTS idx_artwork_created_featured;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_artwork_display_order ON artwork_artwork(display_order, is_featured);",
            "DROP INDEX IF EXISTS idx_artwork_display_order;"
        ),
        # Index for categories
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_category_active ON artwork_category(is_active);",
            "DROP INDEX IF EXISTS idx_category_active;"
        ),
    ]